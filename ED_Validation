use File::DosGlob 'glob';use File::Copy;use File::Basename;use Config::IniFiles;use File::Path;use Getopt::Long;use Cwd;use DBI;use Win32;use File::Find::Rule;use File::Path;use File::Copy;use File::Basename;use CAM::PDF;use IO::Socket::INET;use PDF::API2;use CAM::PDF;my $ScriptVer = "0.1";#print "BWF Editors Validation tool on Web. Ver $ScriptVer (C) SPS, India 2013 Margret Kavitha.\n\n";my ( $BookCode, $ChapNo, $inputStage, $XMLyear, $JSyear, $syear);my (@ERRORPPOINT ) = ();$ErrorFlag = 0;system(cls);print "\n\n";print "\t\t\t****************\n";print "\t\t\t****************\n";print "\n\n";print "Please Enter Your Choice:\n";print "=========================\n\n";print "\t1.Deliverables check\n";print "\t2.Total Pages Check\n";print "\t3.Folio Check\n";print "\t4.Upload package log creation\n";print "\t5.BWF_CRY Rejection\n";print "\n\nChoice\t\t:\t";my $Choice = <STDIN>;chomp($Choice);print "\n\n";if ($Choice=~m/^(1|2|3|4|5)$/){}else{ print "\n\n\t******************************************************\n";        print "\n\tInvalid Choice. Valid values are 1 or 2 or 3 Or 4\n"; print "\n\t******************************************************\n\n";        exit;}if ($Choice==1) { Editorvalidationprocess();}if ($Choice==2) { Foliocheck();}if ($Choice==3) { Pagefolio();}if ($Choice==4) { UploadPackagelogcreation();}if ($Choice==5) { CRYREJECT();}sub Editorvalidationprocess{print "\nEnter BookID \t\t:\t";$BookCode = <STDIN>;chomp($BookCode);print "\nEnter Stage \t\t:\t";$inputStage = <STDIN>;chomp($inputStage);$BKIDNUM=$BookCode;$stage=$inputStage;validaionissue() if($stage=~/600|650/);proof() if($stage=~/200|300/);sub proof{print "\nEnter ChapNo \t\t:\t";$ChapNo = <STDIN>;chomp($ChapNo); print "\nIf Series Enter the Year \t\t:\t";$syear = <STDIN>;chomp($syear);if ($syear){$syear = "_$syear";}  $starttime=localtime();#$BookCode    = $ARGV[0];#$ChapNo      = $ARGV[1];#$inputStage  = $ARGV[2];if (($inputStage == 200) || ($inputStage == 300)) {#$Imageresult =`K:\\sps-soft\\BWF\\Testing\\BWF_ImageConvert.exe $BookCode $ChapNo $inputStage`;     system "K:/sps-soft/BWF/BWF_ImageConvert.exe $BookCode $ChapNo $inputStage";#if($Imageresult=~/Errors were found. See Log file at/i)#{#           push (@ERRORPPOINT,"Image Conversion Error\n");#           $ErrorFlag = 1;#}}if ($inputStage == 200) {$pathtoTravel = "H:/Books/BWF/$BookCode/"."Chapter"."$ChapNo/Stage"."$inputStage/Upload";}elsif ($inputStage == 300) {$pathtoTravel = "H:/Books/BWF/$BookCode/"."Chapter"."$ChapNo/Stage"."$inputStage/Upload//Publisher";}chdir ("$pathtoTravel");print "\n$pathtoTravel\n";if (-e "EdtValidate\_$BookCode\.Err"){ unlink "EdtValidate\_$BookCode\.Err";}if (-e "EdtValidate\_NoError\.log"){ unlink "EdtValidate\_NoError\.log";}if (-e "$BookCode\_$ChapNo\_DeltaPDF\-error\.log"){unlink("$BookCode\_$ChapNo\_DeltaPDF\-error\.log");}##if ($inputStage == 300) {$ONPDF = "H:/Books/Books/BWF/$BookCode/"."Chapter"."$ChapNo/Stage"."$inputStage/Upload/Publisher/*Chapter\_OnlinePDF.pdf*";@ONPDF=glob($ONPDF);$countOnline=scalar @ONPDF;if($countOnline > 2){push (@ERRORPPOINT,"ERROR : Extra OnlinePDF or PitStopReport present in the Uplod folder\n");$ErrorFlag = 1;}}if ($inputStage == 200){  $imgproHdir = "Upload"; }elsif($inputStage == 300){  $imgproHdir = "Upload/Publisher"; } if ( -d "H:/Books/BWF/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Contents/PAGN/XML/MediaObjects"){  $pathpagn = "H:/Books/BWF/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Contents/PAGN/XML/MediaObjects";  @mediaPagnfigures = <$pathpagn/*.*>;  foreach $figpagnMedia (@mediaPagnfigures){   $getpagnName =  basename($figpagnMedia);   if ($getpagnName =~ /(.*?)_HTML\.(gif|jpg|eps|tif)/g){    copy ("$figpagnMedia","H:/Books/BWF/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/$imgproHdir/$getpagnName");   }  } }##########################Copy OF REFERENCE pdf###############if ($inputStage == 200) {$RefPDF="H:/Books/BWF/$BookCode/Stage50/Editorial/Chapter$ChapNo/$BookCode\_$ChapNo\_ReferencePDF.pdf";$uploadpath="H:/Books/BWF/$BookCode/Chapter$ChapNo/Stage$inputStage/Upload";copy("$RefPDF","$uploadpath");}if ($inputStage == 200) {$ONPDF = "H:/Books/BWF/$BookCode/"."Chapter"."$ChapNo/Stage"."$inputStage/Upload/*Chapter\_OnlinePDF.pdf*";@ONPDF=glob($ONPDF);$countOnline=scalar @ONPDF;if($countOnline > 2){push (@ERRORPPOINT,"ERROR : Extra OnlinePDF or PitStopReport present in the Uplod folder\n");$ErrorFlag = 1;}}if ($inputStage == 200) { $pagnpath = "H:/Books/BWF/$BookCode/"."Chapter"."$ChapNo/Stage"."$inputStage/Contents/PAGN"; if  (-e "$pagnpath"){  if  (!(-e "$pagnpath/XML")){     $LEFolder = "H:/Books/BWF/$BookCode/"."Chapter"."$ChapNo/Stage"."$inputStage/Contents/LE";     $LEthree3d = "$pagnpath/$BookCode$syear\_$ChapNo\_Chapter.LE.3d";     $LE3dTime = (stat($LEthree3d))[9];     $LExmlfile = "$LEFolder/$BookCode$syear\_$ChapNo\_Chapter.LE.xml";     $LEFoldTime = (stat($LExmlfile))[9];     if (-e "$BookCode$syear\_$ChapNo\_Chapter\_OnlinePDF.pdf"){      $Uponlinepdf = "$BookCode$syear\_$ChapNo\_Chapter\_OnlinePDF.pdf";      $UponlineTime = (stat("$Uponlinepdf"))[9]     }     if (-e "$BookCode$syear\_$ChapNo\_Chapter.xml"){      $UpChapxml = "$BookCode$syear\_$ChapNo\_Chapter.xml";      $UpChapxml = (stat("$UpChapxml"))[9]     }     if (($LE3dTime ne  "") && ($UponlineTime ne "")){      if ( $LE3dTime > $UponlineTime ){       $difference = $LE3dTime - $UponlineTime;       $getdiff = time2string($difference);       if($getdiff ne ""){           push (@ERRORPPOINT,"ERROR : OnlinePDF in Upload folder date and time $getdiff is less compare with the LE.3d in PAGN Folder \n");           $ErrorFlag = 1;       }      }     }     if (($LE3dTime ne  "") && ($LEFoldTime ne "")){      if ( $LEFoldTime > $LE3dTime ){       $difference = $LEFoldTime - $LE3dTime;       $getdiff = time2string($difference);       if($getdiff ne ""){           push (@ERRORPPOINT,"ERROR : LE.3d in PAGN folder date and time $getdiff is less compare with the LE.xml in LE Folder \n");           $ErrorFlag = 1;       }      }     }     if (($UpChapxml ne  "") && ($LEFoldTime ne "")){      if ( $LEFoldTime != $UpChapxml ){       $difference = $UpChapxml - $LEFoldTime;       $getdiff = time2string($difference);       if($getdiff ne ""){           push (@ERRORPPOINT,"ERROR : Time mismatches $getdiff - LE.xml in LE folder with Chapter XML in upload folder.\n");           $ErrorFlag = 1;       }      }     }    }      } }## $curdir = getcwd; print "$curdir\n\n";$JSXMLFile  = glob( "*_JobSheet_*.xml");@getUploadFiles = <*.*>;$onlinePDF = 0;&ReadJobSheeXML($JSXMLFile);#SRF 21966 $texhdir = "H:/Books/BWF"; $texPagnfolder = "$texhdir/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Contents/PAGN/XML"; if (-e "$texPagnfolder"){  $texcpyxml = <$texPagnfolder/*_XML.xml>;  if (-e $texcpyxml){   $exfilename = $texcpyxml;   $exfilename =~ s/$texPagnfolder\///gsm;   $xmlrmfilename = $exfilename;   $xmlrmfilename =~ s/_XML//i;   if ($inputStage == 200){    copy("$texcpyxml","$texhdir/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Upload/$exfilename");    rename ("$texhdir/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Upload/$exfilename","$texhdir/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Upload/$xmlrmfilename");   }   if ($inputStage == 300){    copy("$texcpyxml","$texhdir/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Upload/Publisher/$exfilename");    rename("$texhdir/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Upload/Publisher/$exfilename","$texhdir/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Upload/Publisher/$xmlrmfilename");        if($EPSILONallfileref=~/Yes/)    {    system "K:/sps-soft/DeltaPDF/BWF_DeltaPDF.exe $BookCode $ChapNo";    push(@ERRORPPOINT,"\nERROR : Please check and clear the Epsilon error log in publisher folder\n") if(-e "$texhdir/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Upload/Publisher/$BookCode\_$ChapNo\_DeltaPDF\-error\.log");    $ErrorFlag = 1 if(-e "$texhdir/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Upload/Publisher/$BookCode\_$ChapNo\_DeltaPDF\-error\.log");            }    }  }  }else{  if ($inputStage == 200){   $threeB2folder = "$texhdir/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Contents/LE";   $xmlcpy3b = <$threeB2folder/*.LE.xml>;  }else{   $threeB2folder = "$texhdir/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Contents/Corr";   $xmlcpy3b = <$threeB2folder/*.xml>;  }  if (-e "$threeB2folder"){   if (-e $xmlcpy3b){    $ex3bfilename = $xmlcpy3b;    $ex3bfilename =~ s/$threeB2folder\///gsm;    $xmlrm3bfilename = $ex3bfilename;    $xmlrm3bfilename =~ s/\.LE//i;    if ($inputStage == 200){     copy("$xmlcpy3b","$texhdir/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Upload/$ex3bfilename");     rename ("$texhdir/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Upload/$ex3bfilename","$texhdir/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Upload/$xmlrm3bfilename");    }    if ($inputStage == 300){     copy("$xmlcpy3b","$texhdir/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Upload/Publisher/$ex3bfilename");     rename("$texhdir/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Upload/Publisher/$ex3bfilename","$texhdir/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Upload/Publisher/$xmlrm3bfilename");          if($EPSILONallfileref=~/Yes/)     {     system "K:/sps-soft/DeltaPDF/BWF_DeltaPDF.exe $BookCode $ChapNo";     push(@ERRORPPOINT,"\nERROR : Please check and clear the Epsilon error log in publisher folder\n") if(-e "$texhdir/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Upload/Publisher/$BookCode\_$ChapNo\_DeltaPDF\-error\.log");     $ErrorFlag = 1 if(-e "$texhdir/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Upload/Publisher/$BookCode\_$ChapNo\_DeltaPDF\-error\.log");     }              }   }  }   } if ($inputStage == 200){  $imgproHdir = "Upload"; }elsif($inputStage == 300){  $imgproHdir = "Upload/Publisher"; } if ( -d "H:/Books/BWF/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Contents/PAGN/XML/MediaObjects"){  $pathpagn = "H:/Books/BWF/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/Contents/PAGN/XML/MediaObjects";  @mediaPagnfigures = <$pathpagn/*.*>;  foreach $figpagnMedia (@mediaPagnfigures){   $getpagnName =  basename($figpagnMedia);   if ($getpagnName =~ /(.*?)_HTML\.(gif|jpg|eps|tif)/g){    copy ("$figpagnMedia","H:/Books/BWF/$BookCode/Chapter"."$ChapNo/Stage"."$inputStage/$imgproHdir/$getpagnName");   }  } } #SRF 21966#k# if (! $chapXMLFile ){ $kar = "$ContentPath/LE/$BookCode$syear\_$ChapNo\_Chapter.LE.xml\n";  $ContentPath = "H:/Books/BWF/$BookCode/"."Chapter"."$ChapNo/Stage"."$inputStage/Contents";  if (-e "$ContentPath/PAGN/XML/$BookCode$syear\_$ChapNo\_Chapter_XML.xml"){   copy( "$ContentPath/PAGN/XML/$BookCode$syear\_$ChapNo\_Chapter_XML.xml","$pathtoTravel");      rename( "$pathtoTravel/$BookCode$syear\_$ChapNo\_Chapter_XML.xml","$pathtoTravel/$BookCode$syear\_$ChapNo\_Chapter.xml");      $chapXMLFile = "$BookCode\_$ChapNo\_Chapter.xml";  }  elsif (-e "$ContentPath/LE/$BookCode$syear\_$ChapNo\_Chapter.LE.xml"){   copy( "$ContentPath/LE/$BookCode$syear\_$ChapNo\_Chapter.LE.xml","$pathtoTravel");      rename( "$pathtoTravel/$BookCode$syear\_$ChapNo\_Chapter.LE.xml","$pathtoTravel/$BookCode$syear\_$ChapNo\_Chapter.xml");      $chapXMLFile = "$BookCode\_$ChapNo\_Chapter.xml";  }elsif (-e "$ContentPath/CORR/$BookCode$syear\_$ChapNo\_Chapter.xml"){   copy( "$ContentPath/CORR/$BookCode$syear\_$ChapNo\_Chapter.xml","$pathtoTravel");#      rename( "$pathtoTravel/$BookCode\_$ChapNo\_Chapter.LE.xml","$pathtoTravel/$BookCode\_$ChapNo\_Chapter.xml");      $chapXMLFile = "$BookCode$syear\_$ChapNo\_Chapter.xml";  }else{   print "###### ChapterXML Doesn't Exists. ######\n";   exit(0);  }#k# } foreach $eachFile (@getUploadFiles) {  if ($eachFile =~ /(.*?)(_Chapter.xml)$/g){   $chapXMLFile = $eachFile;   #push(@delivery600,"$eachFile");  }  elsif ($eachFile =~ /^(.*?)(_JobSheet_200.xml)$/g){   #push(@delivery600,"$eachFile");  }  elsif ($eachFile =~ /^(.*?)(_JobSheet_300.xml)$/g){   #push(@delivery600,"$eachFile");  }  elsif ($eachFile =~ /((.+)(_[FMB0-9]*))(_Chapter_OnlinePDF.pdf)$/){   push(@delivery600,"$eachFile");   $onlinePDF = 1;#SRF 21966   $pdfinfo=`K:\\sps-soft\\PDF_utils\\pdfinfo.exe \"$eachFile\"`;   if ($pdfinfo=~/PDF version:\s+(.*)/) {    $version=$1;#    if ($version !~/1.4/) {    if ($version > 1.7) {           push (@ERRORPPOINT,"ERROR : OnlinePDF version greater than 1.7.\n");    $ErrorFlag = 1;    }   }#SRF 21966  }  elsif ($eachFile =~ /(.+)(_Chapter_OnlinePDF.pdf)$/){   push(@delivery600,"$eachFile");  }  elsif ($eachFile =~ /(.+)(_PitStopReport_Chapter_OnlinePDF.pdf)$/){   push(@delivery600,"$eachFile");  }  elsif ($eachFile =~ /(.+)(_ReferencePDF.pdf)$/){   push(@delivery600,"$eachFile");  }  elsif ($eachFile =~ /(.+)(_DeltaPDF.pdf)$/){   push(@delivery600,"$eachFile");  }  elsif ($eachFile =~ /(.+)(_EpsilonPDF.pdf)$/){   push(@delivery600,"$eachFile");  }  elsif ($eachFile =~ /(.+)(_ProofFeedback(_(\d+))?.pdf)$/){   push(@delivery600,"$eachFile");  }  elsif($eachFile =~ /(.+)(_TEX.zip)$/gsm) {   push(@delivery600,"$eachFile");  }  elsif($eachFile=~ /(.+)(\_HTML.gif|\_HTML.jpg)$/) {   $ChapFigures = $1;      if ($inputStage == 200)      {   $FImageFigure = "$1$2";   }else   {   $FImageFigure = "$1";      }   push(@delivery600,"$FImageFigure");#   push(@delivery600,"$ChapFigures");  }  elsif($eachFile=~ /(.+)(_MOESM[0-9]*\_ESM\.(.+))/gsm) {   $FEsmfile ="$1$2";   push(@delivery600, $FEsmfile);  }  elsif($eachFile=~ /^ppages\.(\d+)/) {   #Do nothing  }  elsif($eachFile=~ /^ORG_(([^_]+)_([^_]+)_([^_]+)_([^_]+))(_Chapter.xml)$/i){   #Nothing to do;  }  elsif($eachFile=~ /^Thumbs\.db$/gsm) {   unlink "$eachFile";  }  else{      if($eachFile=~/En_$ChapNo\_Chapter.tex/i)      {       if($tex == 0)       {       push (@ERRORPPOINT,"ERROR : Wrong FileName (or) Extra file(s) found $eachFile.\n");   $ErrorFlag = 1;    }   }else{       push (@ERRORPPOINT,"ERROR : Wrong FileName (or) Extra file(s) found $eachFile.\n");   $ErrorFlag = 1;      }  } } if (! $JSXMLFile ){  print "###### JohSheet XML Doesn't Exists. ######\n";  exit(0) } $imageBookid = "$BookCode\_"."$ChapNo"; $ImagepropFileName= $imageBookid . "_img.cfg" ; $ImageproptiesPath = "S:/despatch/BWF/FTP/ImageProperties/$BookCode/$ImagepropFileName"; if (-e "$ImageproptiesPath"){  #Read ImageProperties  open(IMAGEFILE,"$ImageproptiesPath") or die print "ERROR : \n Cannot open $ImageproptiesPath\n";   while(<IMAGEFILE>){    $readLine = $_;    push(@readLines,$readLine);   }  close IMAGEFILE;  }  foreach $eachLine (@readLines){  if ($eachLine =~ /\:/){   @SplitInfoImage = split/:/,$eachLine;   $SplitInfoImage[0]=~/((.+)_(.+)_(.+)_(.+))_(.+)\.(.+)/s;   $FigureValue=$1;   $figextension = $7;   push(@figextn,$figextension);#   push(@delivery600,$FigureValue);   push(@ColorValue,$SplitInfoImage[1]);   push(@TypeValue,$SplitInfoImage[2]);  } } &ReadArticleXML($chapXMLFile); &FileCrossChecking(); if ($ErrorFlag == 1) {  if (-e "EdtValidate\_$BookCode\.Err"){   unlink "EdtValidate\_$BookCode\.Err";  }  open(WRITEERROR, ">>EdtValidate\_$BookCode\.Err") || die "Can not open to write $BookCode \n";;  foreach my $Error (@ERRORPPOINT){   print WRITEERROR "$Error";  }  if ($onlinePDF == 0){   print WRITEERROR "OnlinePDF not found. Please check.";  }  close WRITEERROR; }else{ if ($inputStage == 200) {    print "\nEnter E-Proof type Manual(1) or Auto(2) or OXE(3)\t\t:\t";    $etype = <STDIN>;    chomp($etype);        while($etype!~/1|2|3/i)    {    print "\nInvalid Entry\n";    print "\nEnter E-Proof type Manual(1) or Auto(2) or OXE(3)\t\t:\t";    $etype = <STDIN>;    }        chomp($etype);        ConnectDB($BookCode, $ChapNo, $etype);             }    }#k#k}if ($inputStage == 600) { $pathtoTravel = "//10.110.5.1/bk_sps1/Books/BWF/$BookCode/"."Stage"."$inputStage/Upload"; chdir ("$pathtoTravel"); print "\n$pathtoTravel\n"; $JSXMLFile  = glob( "*_JobSheet_*.xml"); if (! $JSXMLFile ){  print "###### JohSheet XML Doesn't Exists. ######\n";  exit(0); } @getUploadFiles = <*>; FileStructure600(); &ReadJobSheeXML($JSXMLFile); FileCrossChecking(); if ($ErrorFlag == 1) {  if (-e "EdtValidate\_$BookCode\.Err"){   unlink "EdtValidate\_$BookCode\.Err";  }  open(WRITEERROR, ">>EdtValidate\_$BookCode\.Err") || die "Can not open to write $BookCode \n";;  foreach my $Error (@ERRORPPOINT){   print WRITEERROR "$Error";  }  close WRITEERROR; }else{#k#    ConnectDB();    }}sub FileStructure600(){ $partInput = 0; foreach $eachFile (@getUploadFiles) {         if ($eachFile =~ /_Part/) {   $partInput = 1;   last;  }   if ((-d ($eachFile))or ($eachFile =~/\_Chapter/)) {   @ReadinEach = glob("$eachFile/*.*");   foreach $readineach (@ReadinEach){    if ($readineach =~/\.xml/){     #read chapter/backmatter/frontmatter xml if any.     &ReadArticleXML($readineach);    }    push(@delivery600, "$readineach");   }   @ReadinEach = ();  }else{   push(@delivery600, "$eachFile");  } } #Only for part 600 if ($partInput == 1) {  @delivery600 = ();  foreach $eachFile (@getUploadFiles) {   if (-d ($eachFile)) {    @ReadinEach = glob("$eachFile/*");    foreach $readineach (@ReadinEach){     if (-d ($readineach)) {      @ReadinEachChap = glob("$readineach/*.*");      foreach $ReadinEachChap (@ReadinEachChap) {       if ($readineach =~/\.xml/){        #read chapter/backmatter/frontmatter xml if any.        &ReadArticleXML($readineach);       }       push(@delivery600, "$ReadinEachChap");      }      @ReadinEachChap =();     }else{      push(@delivery600, "$readineach");      @ReadinEachChap = ();     }    }    @ReadinEach = (); @ReadinEachChap = ();   }   else{    push(@delivery600, "$eachFile");   }  } }}sub ReadJobSheeXML() {($JSXMLFile)  = @_;open (JS600,"$JSXMLFile") or die "cannot able to open $JSXMLFile file to read\n"; @js600xmlfile   = <JS600>; $js600xmlfile   = join("", @js600xmlfile); my ($contentinfo); if (($inputStage == 200) || ($inputStage == 300)){  if ($js600xmlfile =~ /.*?<DeliverablesForDiscreteBookObjects(.*?)\/>.*?/gsm){   $refreshContentinfo = $contentinfo = "$1";    if ($inputStage == 200)    {   if ($contentinfo =~ m/ DeltaPDF\=\"(.*?)\" /igsm) {    my $allfileref ="$1";    if ($allfileref =~ /Yes/i){             #(Issue #1729)#$Deltaxml =`K:\\sps-soft\\BWF\\BWF_DeltaEpsilon.exe $BookCode $inputStage $ChapNo`;          #if ($syear)          #{     push(@allFileRef,"$BookCode$syear\_$ChapNo\_DeltaPDF.pdf");          #  }else{          #push(@allFileRef,"$BookCode\_$ChapNo\_DeltaPDF.pdf");          #}    }    $contentinfo = $refreshContentinfo;    }   if ($contentinfo =~ m/ ReferencePDF\=\"(.*?)\" /igsm) {    my $allfileref ="$1";    if ($allfileref =~ /Yes/i){          #if ($syear)          #{     push(@allFileRef,"$BookCode$syear\_$ChapNo\_ReferencePDF.pdf");          #  }else{     #push(@allFileRef,"$BookCode\_$ChapNo\_ReferencePDF.pdf");     #}    }    $contentinfo = $refreshContentinfo;    }   if ($contentinfo =~ m/ Pit-Stop-Reports\=\"(.*?)\" /igsm) {    my $allfileref ="$1";    if ($allfileref =~ /Yes/i){          #if ($syear)          #{     push(@allFileRef,"$BookCode$syear\_$ChapNo\_PitStopReport_Chapter_OnlinePDF.pdf");          #  }else{     #push(@allFileRef,"$BookCode\_$ChapNo\_ReferencePDF.pdf");     #}    }    $contentinfo = $refreshContentinfo;    }   if ($contentinfo =~ m/ ElectronicPDF\=\"(.*?)\" /igsm) {    my $allfileref ="$1";    if ($allfileref =~ /Yes/i){          #if ($syear)          #{     push(@allFileRef,"$BookCode$syear\_$ChapNo\_Chapter_OnlinePDF.pdf");          #  }else{     #push(@allFileRef,"$BookCode\_$ChapNo\_ReferencePDF.pdf");     #}    }    $contentinfo = $refreshContentinfo;    }                               }    if (($inputStage == 200)||($inputStage == 300)) {        $tex = "0";   if ($contentinfo =~ m/ TEX\=\"(.*?)\" /igsm) {    my $allfileref ="$1";    if ($allfileref =~ /Yes/i){    $tex = "1";    $ContentPath = "H:/Books/BWF/$BookCode/"."Chapter"."$ChapNo/Stage"."$inputStage/Contents/PAGN";    if (-e "$ContentPath/$BookCode\_$ChapNo\_Chapter.tex"){        copy( "$ContentPath/$BookCode\_$ChapNo\_Chapter.tex","$pathtoTravel");     }else{         print "###### Tex file Doesn't Exists in PAGN Folder. ######\n";         exit(0);    }    }    $contentinfo = $refreshContentinfo;    }  }    if ($inputStage == 300)    {        if ($contentinfo =~ m/ EpsilonPDF\=\"(.*?)\" /igsm) {    $EPSILONallfileref ="$1";            #if ($allfileref =~ /Yes/i){                             #if ($syear)          #{     #push(@allFileRef,"$BookCode$syear\_$ChapNo\_EpsilonPDF.pdf");          #}else{     #push(@allFileRef,"$BookCode\_$ChapNo\_EpsilonPDF.pdf");     #}    #}    $contentinfo = $refreshContentinfo;    }   if ($contentinfo =~ m/ ProofFeedbackPDF\=\"(.*?)\" /igsm) {    my $allfileref ="$1";    if ($allfileref =~ /Yes/i){        $count = $js600xmlfile =~s/CorrectionsRequired=\"Yes\"/CorrectionsRequired=\"Yes\"/igs;        if ($count > 1)        {        for( $a = $count; $a > 0; $a = $a - 1 ){          push(@allFileRef,"$BookCode$syear\_$ChapNo\_ProofFeedback\_$a.pdf");          }        }else{#174_2013_887_ProofFeedback_1.pdf          #if ($syear)          #{     push(@allFileRef,"$BookCode$syear\_$ChapNo\_ProofFeedback.pdf");     }          #}else{     #push(@allFileRef,"$BookCode\_$ChapNo\_ProofFeedback.pdf");     #}    }    $contentinfo = $refreshContentinfo;    }   if ($contentinfo =~ m/ Pit-Stop-Reports\=\"(.*?)\" /igsm) {    my $allfileref ="$1";    if ($allfileref =~ /Yes/i){          #if ($syear)          #{     push(@allFileRef,"$BookCode$syear\_$ChapNo\_PitStopReport_Chapter_OnlinePDF.pdf");          #  }else{     #push(@allFileRef,"$BookCode\_$ChapNo\_ReferencePDF.pdf");     #}    }    $contentinfo = $refreshContentinfo;    }    } }  if ($js600xmlfile =~ /<CopyrightYear>(.*?)<\/CopyrightYear>/i){     $JSyear = $1;  } } close JS600;}sub ReadArticleXML() {($ChapXMLFile)  = @_;open (CHAP600,"$ChapXMLFile") or die "cannot able to open $JSXMLFile file to read\n"; @chap600xmlfile   = <CHAP600>; $ExternalAddrAtt = $chap600xmlfile   = join("", @chap600xmlfile); $chap600fullfile = $chap600xmlfile; if (($inputStage == 200) ||($inputStage == 300)) {  while ($ExternalAddrAtt =~ /(.*?)(<ExternalRef>.*?<\/ExternalRef>)(.*)/gsm){   $startExt = $1; $ProcExt = $2; $remainExt = $3;   if ($ProcExt =~ /Address=\"(.*?)\"/){    $chkExternalAdd = $1;    if ($chkExternalAdd =~ /[\s]/g){           push (@ERRORPPOINT,"ERROR : In $extrefFile ExternalRef Address value contains SPACE in $chkExternalAdd. Please check.\n");           $ErrorFlag = 1;    }    if ($chkExternalAdd =~ /(\"|\$|\*|<|>|ä|à|å|ç|ë|è|î|Ä|Ö|Ü|¢|£|₧|ƒ|ó|ú|Ñ|º|⌐|½|«|╢|╗|└|┴|┬|├|─|┼|╞|╟|╚|╔|╩|╦|╠|═|╬|╧|╨|╤|╥|╙|╘|╒|╓|╫|╪|┘|┌|█|▄|▌|▐|▀|α|ß|Γ|π|Σ|σ|µ|τ|Φ|Θ|Ω|δ|∞|φ|ε|∩|≡|±|≥|≤|⌠|⌡|÷|≈|°|∙|·|√|ⁿ|²|■| )/){     push (@ERRORPPOINT,"ERROR : In $extrefFile ExternalRef Address value contains Special Character in $chkExternalAdd. Please check.\n");     $ErrorFlag = 1;    }    $httpcnt =()= $chkExternalAdd =~ /http/gi;    if ($httpcnt > 1){     push (@ERRORPPOINT,"In $extrefFile ExternalRef Address value contains more than one http in $chkExternalAdd. Please check.\n");     $ErrorFlag = 1;    }    if (($chkExternalAdd =~ /http/) and ($chkExternalAdd =~/\@/)){     push (@ERRORPPOINT,"In $extrefFile Wrong ExternalRef defined $chkExternalAdd. Please check\n");     $ErrorFlag = 1;    }   }   $ExternalAddrAtt = $remainExt;  } if ($inputStage == 200) { while ($chap600xmlfile =~ /.*?FileRef=\"(.*?)\"(.*)/gsm){  $fileRefValue = $1; $reProcess = $2;  if ($fileRefValue =~ /HTML/) {   $getImageName = $fileRefValue;#   $getImageName=~/((.+)_(.+)_(.+)_(.+))_(.+)\.(.+)/s;   push(@allFileRef,$getImageName);  }else{   if ($fileRefValue !~ /MediaObjects/i){     if ($fileRefValue !~ /chapter\.xml/i){      push(@allFileRef,"$fileRefValue");   }    }    }  $chap600xmlfile = $reProcess; } }  } while ($chap600xmlfile =~ /.*?FileRef=\"(.*?)\"(.*)/gsm){  $fileRefValue = $1; $reProcess = $2;  if ($fileRefValue =~ /HTML/) {   $getImageName = $fileRefValue;   $getImageName=~/((.+)_(.+)_(.+)_(.+))_(.+)\.(.+)/s;   push(@allFileRef,"$1");  }else{   if ($fileRefValue !~ /MediaObjects/i){     if ($fileRefValue !~ /chapter\.xml/i){    push(@allFileRef,"$fileRefValue");     }   }  }  $chap600xmlfile = $reProcess; } while ($chap600fullfile =~ /<VideoObject.*?FileRef=\"(.*?)\"(.*)/gsm){  $fileRefValue = $1; $reProcess = $2;   push(@allFileRef,"$1");      $chap600xmlfile = $reProcess; }    if ($chap600fullfile =~/<ChapterID>(.*?)<\/ChapterID>/i){     $SpaceinID = $1;     if($SpaceinID =~ /[\s]+/g){      push (@ERRORPPOINT,"ERROR : <ChapterID> contains space\n");      $ErrorFlag = 1;     }    }    if ($chap600fullfile =~/<CopyrightYear>(.*?)<\/CopyrightYear>/i){     $XMLyear = $1;    }$numberpresent = "";$chnumber = "";    if ($chap600fullfile =~/<ChapterInfo(.*?)NumberingStyle=\"(ChapterContentSeparately|ChapterContent|ChapterOnly)\"/igs){      $numberpresent = 1;     }       if($chap600fullfile =~ /<ChapterNumber>/igs){       $chnumber = 1;     }      if ($numberpresent ne $chnumber)      {    push (@ERRORPPOINT,"ERROR : ChapterInfo NumberingStyle not match with CahpterNumber\n");    $ErrorFlag = 1;       }close CHAP600;}sub FileCrossChecking() {for( $i = 0; $i < @allFileRef; $i++) {  $temp = @allFileRef[$i];  print "$temp\n";  if(@allFileRef[$i]=~ /JobSheet/s) {  }  else {   $found = false;  }  for( $j = 0; $j < @delivery600; $j++) {   @allFileRef[$i]=~s/\.(gif|jpg)//i;   @delivery600[$j]=~s/\.(gif|jpg)//i;   @allFileRef[$i]=~s/_HTML\.(gif|jpg)//i;   @delivery600[$j]=~s/_HTML\.(gif|jpg)//i;   if(@allFileRef[$i] eq  @delivery600[$j]) {    $found= true ;    last;   }  }  if ($found eq false) {   push(@ERRORPPOINT,"ERROR : In XML/JS $allFileRef[$i] link Found, In Deliverables not Found\n");   $ErrorFlag = 1;  } } for($i = 0; $i < @delivery600; $i++) {  $temp = @delivery600[$i];  print "$temp\n";  #if((@delivery600[$i]=~ /JobSheet/s) or (@delivery600[$i]=~ /ppages/s) or (@delivery600[$i]=~/ORG/i) ) {  if((@delivery600[$i]=~ /JobSheet/s) or (@delivery600[$i]=~/ORG/i) or (@delivery600[$i]=~/_HTML/i) or (@delivery600[$i]=~/^FSV.*?\.txt/i) or (@delivery600[$i]=~/^BookTitleID.*?\.zip$/i) or (@delivery600[$i]=~/((.+)(_[FMB0-9]*))(_Chapter_OnlinePDF.pdf)/i) or ((@delivery600[$i]=~ /Tex\.zip/i) && ($tex == 1))) {   $i++;   next;  }  else{   $found=false;  }  for($j = 0; $j < @allFileRef; $j++) {   if (@delivery600[$i]=~/Fig/i) {    $kar = @delivery600[$i];   }      @allFileRef[$i]=~s/\.(gif|jpg)//i;   @delivery600[$j]=~s/\.(gif|jpg)//i;   @allFileRef[$i]=~s/_HTML\.(gif|jpg)//i;   @delivery600[$j]=~s/_HTML\.(gif|jpg)//i;   if(@delivery600[$i] eq  @allFileRef[$j]) {    $found= true ;    last;   }  }  if ($found eq false) {   push(@ERRORPPOINT, "ERROR : In deliverables $delivery600[$i] Found, but In XML/JS link not found.\n");   $ErrorFlag = 1;  } }  if ($inputStage == 300)  {    if ($XMLyear ne $JSyear)    {   push(@ERRORPPOINT, "ERROR : Copyright Year mismatch with JS and XML.\n");   $ErrorFlag = 1;    } }  return $ErrorFlag;}sub time2string{    $seconds = shift;    # Convert seconds to days, hours, minutes, seconds    @parts = gmtime($seconds);    $ret = '';    if(sprintf("%4d",@parts[7])>0)    {        $ret .= sprintf("%4d",@parts[7]);        $ret .= sprintf(" %s",(@parts[7]>1)?'days':'day');    }    if(sprintf("%4d",@parts[2])>0)    {        $ret .= sprintf("%4d",@parts[2]);        $ret .= sprintf(" %s",(@parts[2]>1)?'hours':'hour');    }    if(sprintf("%4d",@parts[1])>0)    {        $ret .= sprintf("%4d",@parts[1]);        $ret .= sprintf(" %s",(@parts[1]>1)?'minutes':'minute');    }    return $ret;}sub ConnectDB{   use Win32; $loginName = Win32::LoginName; my $dbusername = "SPRBWF_ProdTool"; my $dbpassword = "SprBWF121#"; #my $server     = "Genny";  my $server     = "Jobtracksps"; my $database   = "BWF-PMS"; my( $BCode, $CCode, $etype ) = @_; $dbh  = DBI->connect( "DBI:ODBC:driver={SQL Server};Server=$server;Database=$database;UID=$dbusername;PWD=$dbpassword", {PrintError => 0, AutoCommit => 0})  || die "\n\n$DBI::errstr\n";  $SQL = "EXEC usp_saveEProof_Option_ForEditorValidation \@bookId  = '$BCode', \@chapterId  = '$CCode', \@option = '$etype'"; $dbh->do($SQL); $dbh->disconnect();####FILE MOVEMENT EDITOR CHECK2 ### $dbh  = DBI->connect( "DBI:ODBC:driver={SQL Server};Server=$server;Database=$database;UID=$dbusername;PWD=$dbpassword", {PrintError => 0, AutoCommit => 0})  || die "\n\n$DBI::errstr\n";  $SQL = "EXEC usp_BWFStageList_S200_ForEditorValidation \@userEmployeecode = 'ALL', \@menuSerialNo = '90', \@bookId  = '$BCode', \@chapterId  = '$CCode'";   $sth = $dbh->prepare($SQL);   $sth->execute();    while ( @row = $sth->fetchrow_array ) {     $bookid = $row[0];     $chapterid = $row[1];     $currentnodeid = $row[2];     $currentmenuid = $row[3];     $nextnodeid = $row[4];     $nextmenuid = $row[5];    }  if ($chapterid)  {  $SQL = "EXEC usp_BWFPMS_Move_S200_ForEditorValidation \@bookId  = '$bookid', \@chapterId  = '$chapterid', \@currentNodeId = '$currentnodeid', \@currentMenuId = '$currentmenuid', \@nextNodeId = '$nextnodeid', \@nextMenuId = '$nextmenuid', \@userId = '$loginName'"; $dbh->do($SQL);  } $dbh->disconnect();    ####FILE MOVEMENT EDITOR CHECK### $Ndbh  = DBI->connect( "DBI:ODBC:driver={SQL Server};Server=$server;Database=$database;UID=$dbusername;PWD=$dbpassword", {PrintError => 0, AutoCommit => 0})  || die "\n\n$DBI::errstr\n"; $NSQL = "EXEC usp_BWFStageList_S200_ForEditorValidation \@userEmployeecode = 'ALL', \@menuSerialNo = '23', \@bookId  = '$BCode', \@chapterId  = '$CCode'";   $Nsth = $Ndbh->prepare($NSQL);   $Nsth->execute();    while ( @Nrow = $Nsth->fetchrow_array ) {     $Nbookid = $Nrow[0];     $Nchapterid = $Nrow[1];     $Ncurrentnodeid = $Nrow[2];     $Ncurrentmenuid = $Nrow[3];     $Nnextnodeid = $Nrow[4];     $Nnextmenuid = $Nrow[5];    }  if ($Nchapterid)  {  $NSQL = "EXEC usp_BWFPMS_Move_S200_ForEditorValidation \@bookId  = '$Nbookid', \@chapterId  = '$Nchapterid', \@currentNodeId = '$Ncurrentnodeid', \@currentMenuId = '$Ncurrentmenuid', \@nextNodeId = '$Nnextnodeid', \@nextMenuId = '$Nnextmenuid', \@userId = '$loginName'"; $Ndbh->do($NSQL);  } $Ndbh->disconnect(); ####FILE MOVEMENT PAGINATION CORRECTION###if($syear eq ""){$NNdbh  = DBI->connect( "DBI:ODBC:driver={SQL Server};Server=$server;Database=$database;UID=$dbusername;PWD=$dbpassword", {PrintError => 0, AutoCommit => 0})  || die "\n\n$DBI::errstr\n";$sth1 = $NNdbh->prepare("{? = call usp_BWFPMS_Move_S200_From_PagnCorr_Dataset_ForFileVal('$BCode','$CCode','13','25','12','26','0004559')}");$sth1->bind_param_inout(1, \$rv, 64) if(! $sth1->errstr );$sth1->execute() if(! $sth1->errstr );$NNdbh->disconnect();}else{$NNdbh  = DBI->connect( "DBI:ODBC:driver={SQL Server};Server=$server;Database=$database;UID=$dbusername;PWD=$dbpassword", {PrintError => 0, AutoCommit => 0})  || die "\n\n$DBI::errstr\n";$sth1 = $NNdbh->prepare("{? = call usp_BWFPMS_Move_S200_From_PagnCorr_Dataset_ForFileVal('$BCode','$CCode','10','25','9','26','0004559')}");$sth1->bind_param_inout(1, \$rv, 64) if(! $sth1->errstr );$sth1->execute() if(! $sth1->errstr );$NNdbh->disconnect(); }####END###$ChapNo }$endtime=localtime();open SLF,">>","H:/Books/BWF/SW_Log/EditorValidationlog/EditorValidation.log";print SLF"\n\n";print SLF"$BookCode\_$ChapNo\_$inputStage\nStartTime====$starttime\n";print SLF"EndTime======$endtime\n";close(SLF);}sub validaionissue{print "\nProcessing File,Please wait.\n";open FCHCORR,"<","T:/Books/BWF/$BKIDNUM/Stage$stage/Author/$BKIDNUM\_JobSheet\_$stage.xml";$JSCONT=do {local $/; <FCHCORR>};close(FCHCORR);$DELTACOVERCON=$JSCONT;$PUBCHECK=$JSCONT;$JSTOPDF=$JSCONT;$PROOREQ=$JSCONT;$CLASS=$JSCONT;if($CLASS=~/<ProductionClassification Type=\"A\_Pawn|B\_Bishop|C\_Knight\"/ig){$CRCFLAG="YES";} if(!(-e "M:/scanning/SPRINGER/BWF/ImageConversion/$BKIDNUM\_Stage$stage\_NoError.txt")){$DELREPOR.="Image execution success report missing in M server. Please contact scanning\n" if(($stage=~/600|650/) && ($CRCFLAG ne "YES"));}if($DELTACOVERCON=~/<BookPrintISBN>(.*)<\/BookPrintISBN>/s){$BOOKPRITISBN=$1;}if($DELTACOVERCON=~/<BookElectronicISBN>(.*)<\/BookElectronicISBN>/s){$BOOKEISBN=$1;}while($DELTACOVERCON=~/<ISBN>(.*?)<\/ISBN>/s){push(@BOOK2ISBN,$1);$DELTACOVERCON=~s/<ISBN>(.*?)<\/ISBN>//s;}if(scalar @BOOK2ISBN == 3){ $McopyISBN=$BOOK2ISBN[1];}if($DELTACOVERCON=~/BookDeltaPDF=\"Yes\"/){$deltaflag=1;}$uploadpath="T:/Books/BWF/$BKIDNUM/Stage$stage/Upload" if($stage=~/600/);$uploadpath="T:/Books/BWF/$BKIDNUM/Stage$stage/Upload/Publisher" if($stage=~/650/);unlink("$uploadpath/EditorValidationReport.txt");unlink("$uploadpath/pdferror.log");$PAGPATH="T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PAGN";while($JSCONT=~/<ChapterID>(\d+)<\/ChapterID>/s){push(@CORXML,"$1");$JSCONT=~s/<ChapterID>(\d+)<\/ChapterID>//s;} foreach $IID(@CORXML){if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_$IID\_Chapter.xml")){$DELREPOR.="$BKIDNUM\_$IID\_Chapter.xml missing in correction folder\n";}if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_$IID\_Chapter\_equation.txt")){$DELREPOR.="$BKIDNUM\_$IID\_Chapter_equation.txt missing in correction folder\n" if($CRCFLAG ne "YES");}$TIMEOFCORRXML = -M "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_$IID\_Chapter.xml";$TIMEOFEQTXT = -M "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_$IID\_Chapter\_equation.txt";$DELREPOR.="EQUATION TXT TIME MISMATCH FOR $BKIDNUM\_$IID\_Chapter\_equation.txt\n" if(($TIMEOFEQTXT > $TIMEOFCORRXML) && ($CRCFLAG ne "YES"));if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Online/$BKIDNUM\_$IID\_Chapter\_OnlinePDF.pdf")){$DELREPOR.="$BKIDNUM\_$IID\_Chapter\_OnlinePDF.pdf missing in Content/PDF/Online\n" if($CRCFLAG ne "YES");}if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Print/$BKIDNUM\_$IID\_Chapter\_PrintPDF.pdf")){$DELREPOR.="$BKIDNUM\_$IID\_Chapter\_PrintPDF.pdf missing in Content/PDF/Print\n" if($CRCFLAG ne "YES");}mkpath("D:/$BKIDNUM\_HTML/$IID");copy("T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_$IID\_Chapter.xml","D:/$BKIDNUM\_HTML/$IID");if($deltaflag==1){if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Delta/PDF/$BKIDNUM\_$IID\_DeltaPDF.pdf")){$DELREPOR.="T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Delta/PDF/$BKIDNUM\_$IID\_DeltaPDF.pdf missing\n" if($CRCFLAG ne "YES");}  }$XMLVALPATH="T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_$IID\_Chapter.xml";$XMLVALPATH =~ s/\//\\/gsm;system ("K:\\sps-soft\\SpringerA++\\Inst\\ContentChk\\ContentChk_PMS.exe $XMLVALPATH 9"); open TFTR,"<","T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/Error.log";$ERRCONT=do {local $/; <TFTR>};close(TFTR);$ERRCONT=~s/Error\:[An ]*ImageObject[^\n]+\n//sig;$ERRCONT=~s/Error\: (Year|Month|Day) in OnlineDate \(\'[\s\S\t\n]*\'\) is not valid(Year|Month|Day)[^\n]+\n//sig;$ERRCONT=~s/Error: Year in OnlineDate(.*?)Column \d+\)//is;$ERRCONT=~s/Error: Month in OnlineDate(.*?)Column \d+\)//is;$ERRCONT=~s/Error: Day in OnlineDate(.*?)Column \d+\)//is;if($ERRCONT=~m/Error\:/si){$DELREPOR.="\n$BKIDNUM\_$IID\_Chapter.xml contains xml validation error\n";}}while($JSCONT=~/<DiscreteBookObjectInfo ID\=\"PartFrontmatter\_(\d+)\">/s){push(@PARTXML,"$1");$JSCONT=~s/<DiscreteBookObjectInfo ID\=\"PartFrontmatter\_(\d+)\">//s;}foreach $PARTID(@PARTXML){if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_$PARTID\_PartFrontmatter.xml")){$DELREPOR.="$BKIDNUM\_$PARTID\_PartFrontmatter.xml missing in correction folder\n";}if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_$PARTID\_PartFrontmatter_equation.txt")){$DELREPOR.="$BKIDNUM\_$PARTID\_PartFrontmatter_equation.txt missing in correction folder\n" if($CRCFLAG ne "YES");}$TIMEOFPARTCORRXML = -M "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_$PARTID\_PartFrontmatter.xml";$TIMEOFPARTEQTXT = -M "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_$PARTID\_PartFrontmatter_equation.txt";$DELREPOR.="EQUATION TXT TIME MISMATCH FOR $BKIDNUM\_$PARTID\_PartFrontmatter_equation.txt\n" if(($TIMEOFPARTEQTXT > $TIMEOFPARTCORRXML) && ($CRCFLAG ne "YES"));if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Online/$BKIDNUM\_$PARTID\_PartFrontmatter\_OnlinePDF.pdf")){$DELREPOR.="$BKIDNUM\_$PARTID\_PartFrontmatter\_OnlinePDF.pdf missing in Content/PDF/Online\n" if($CRCFLAG ne "YES");}if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Print/$BKIDNUM\_$PARTID\_PartFrontmatter\_PrintPDF.pdf")){$DELREPOR.="$BKIDNUM\_$PARTID\_PartFrontmatter\_PrintPDF.pdf missing in Content/PDF/Print\n" if($CRCFLAG ne "YES");}if(!(-e "$uploadpath/$BKIDNUM\_$PARTID\_Part/$BKIDNUM\_$PARTID\_PartFrontmatter/$BKIDNUM\_$PARTID\_PartFrontmatter\_OnlinePDF.pdf")){$DELREPOR.="$uploadpath/$BKIDNUM\_$PARTID\_Part/$BKIDNUM\_$PARTID\_PartFrontmatter/$BKIDNUM\_$PARTID\_PartFrontmatter\_OnlinePDF.pdf\n";}if(!(-e "$uploadpath/$BKIDNUM\_$PARTID\_Part/$BKIDNUM\_$PARTID\_PartFrontmatter/$BKIDNUM\_$PARTID\_PitStopReport\_PartFrontmatter\_OnlinePDF.pdf")){$DELREPOR.="$uploadpath/$BKIDNUM\_$PARTID\_Part/$BKIDNUM\_$PARTID\_PartFrontmatter/$BKIDNUM\_$PARTID\_PitStopReport\_PartFrontmatter\_OnlinePDF.pdf\n";}if($deltaflag==1){if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Delta/PDF/$BKIDNUM\_$PARTID\_PartFrontmatter\_DeltaPDF.pdf")){$DELREPOR.="T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Delta/PDF/$BKIDNUM\_$PARTID\_PartFrontmatter\_DeltaPDF.pdf missing\n" if($CRCFLAG ne "YES");}  }$PARTXMLVALPATH="T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_$PARTID\_PartFrontmatter.xml";$PARTXMLVALPATH =~ s/\//\\/gsm;system ("K:\\sps-soft\\SpringerA++\\Inst\\ContentChk\\ContentChk_PMS.exe $PARTXMLVALPATH 17"); open PTFTR,"<","T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/Error.log";$PAERRCONT=do {local $/; <PTFTR>};close(PTFTR);$PAERRCONT=~s/Error\:[An ]*ImageObject[^\n]+\n//sig;$PAERRCONT=~s/Error\: (Year|Month|Day) in OnlineDate \(\'[\s\S\t\n]*\'\) is not valid(Year|Month|Day)[^\n]+\n//sig;$PAERRCONT=~s/Error: Year in OnlineDate(.*?)Column \d+\)//is;$PAERRCONT=~s/Error: Month in OnlineDate(.*?)Column \d+\)//is;$PAERRCONT=~s/Error: Day in OnlineDate(.*?)Column \d+\)//is;if($PAERRCONT=~m/Error\:/si){$DELREPOR.="\n$BKIDNUM\_$PARTID\_PartFrontmatter.xmls contains xml validation error\n";}}if($JSCONT=~/Apage\_FM1|BookFrontmatter/s){if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_BookFrontmatter.xml")){$DELREPOR.="FM XML missing in correction folder\n";}if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_BookFrontmatter_equation.txt")){$DELREPOR.="FM EQUATION TXT missing in correction folder\n" if($CRCFLAG ne "YES");}$TIMEOFFMCORRXML = -M "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_BookFrontmatter.xml";$TIMEOFMEQTXT = -M "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_BookFrontmatter_equation.txt";$DELREPOR.="EQUATION TXT TIME MISMATCH FOR $BKIDNUM\_BookFrontmatter_equation.txt\n" if($TIMEOFMEQTXT > $TIMEOFFMCORRXML);if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Online/$BKIDNUM\_BookFrontmatter_OnlinePDF.pdf")){$DELREPOR.="FM PDF missing in Content/PDF/Online folder\n" if($CRCFLAG ne "YES");}if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Print/$BKIDNUM\_BookFrontmatter_PrintPDF.pdf")){$DELREPOR.="FM PDF missing in Content/PDF/Print folder\n" if($CRCFLAG ne "YES");}if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Online/$BKIDNUM\_OFC.pdf")){$DELREPOR.="OFC PDF missing in Content/PDF/Online folder\n" if($CRCFLAG ne "YES");}if(!(-e "$uploadpath/$BKIDNUM\_BookFrontmatter/$BKIDNUM\_BookFrontmatter\_OnlinePDF.pdf")){$DELREPOR.="$uploadpath/$BKIDNUM\_BookFrontmatter/$BKIDNUM\_BookFrontmatter\_OnlinePDF.pdf missing\n";}if(!(-e "$uploadpath/$BKIDNUM\_BookFrontmatter/$BKIDNUM\_BookTOC\_OnlinePDF.pdf")){$DELREPOR.="$uploadpath/$BKIDNUM\_BookFrontmatter/$BKIDNUM\_BookTOC\_OnlinePDF.pdf missing\n";}mkpath("D:/$BKIDNUM\_HTML/FM");copy("T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_BookFrontmatter.xml","D:/$BKIDNUM\_HTML/FM");if($deltaflag==1){if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Delta/PDF/$BKIDNUM\_FM1_DeltaPDF.pdf")){$DELREPOR.="T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Delta/PDF/$BKIDNUM\_FM1_DeltaPDF.pdf Missing\n" if($CRCFLAG ne "YES");}  }$FMXMLVALPATH="T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_BookFrontmatter.xml";$FMXMLVALPATH=~ s/\//\\/gsm;system ("K:\\sps-soft\\SpringerA++\\Inst\\ContentChk\\ContentChk_PMS.exe $FMXMLVALPATH 15"); open FMFTR,"<","T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/Error.log";$FMERRCONT=do {local $/; <FMFTR>};close(FMFTR);$FMERRCONT=~s/Error\:[An ]*ImageObject[^\n]+\n//sig;$FMERRCONT=~s/Error\: (Year|Month|Day) in OnlineDate \(\'[\s\S\t\n]*\'\) is not valid(Year|Month|Day)[^\n]+\n//sig;$FMERRCONT=~s/Error: Year in OnlineDate(.*?)Column \d+\)//is;$FMERRCONT=~s/Error: Month in OnlineDate(.*?)Column \d+\)//is;$FMERRCONT=~s/Error: Day in OnlineDate(.*?)Column \d+\)//is;if($FMERRCONT=~m/Error\:/si){$DELREPOR.="\n$BKIDNUM\_BookFrontmatter.xml contains xml validation error\n";}}if($JSCONT=~/Apage\_BM2|BookBackmatter/s){if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_BookBackmatter.xml")){$DELREPOR.="BM XML missing in correction folder\n";}if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_BookBackmatter_equation.txt")){$DELREPOR.="BM EQUATION TXT missing in correction folder\n" if($CRCFLAG ne "YES");}$TIMEOFBMCORRXML = -M "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_BookBackmatter.xml";$TIMEOBMEQTXT = -M "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_BookBackmatter_equation.txt";$DELREPOR.="EQUATION TXT TIME MISMATCH FOR $BKIDNUM\_BookBackmatter_equation.txt\n" if(($TIMEOBMEQTXT > $TIMEOFBMCORRXML) && ($CRCFLAG ne "YES"));if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Online/$BKIDNUM\_BookBackmatter_OnlinePDF.pdf")){$DELREPOR.="BM PDF missing in Content/PDF/Online folder\n" if($CRCFLAG ne "YES");}if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Print/$BKIDNUM\_BookBackmatter_PrintPDF.pdf")){$DELREPOR.="BM PDF missing in Content/PDF/Print folder\n" if($CRCFLAG ne "YES");}if(!(-e "$uploadpath/$BKIDNUM\_BookBackmatter/$BKIDNUM\_BookBackmatter\_OnlinePDF.pdf")){$DELREPOR.="$uploadpath/$BKIDNUM\_BookBackmatter/$BKIDNUM\_BookBackmatter\_OnlinePDF.pdf\n";}mkpath("D:/$BKIDNUM\_HTML/BM");copy("T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_BookBackmatter.xml","D:/$BKIDNUM\_HTML/BM");if($deltaflag==1){if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Delta/PDF/$BKIDNUM\_BM2_DeltaPDF.pdf")){$DELREPOR.="T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Delta/PDF/$BKIDNUM\_BM2_DeltaPDF.pdf Missing\n" if($CRCFLAG ne "YES");}  }$BMXMLVALPATH="T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_BookBackmatter.xml";$BMXMLVALPATH=~ s/\//\\/gsm;system ("K:\\sps-soft\\SpringerA++\\Inst\\ContentChk\\ContentChk_PMS.exe $BMXMLVALPATH 15"); open BMFTR,"<","T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/Error.log";$BMERRCONT=do {local $/; <BMFTR>};close(FMFTR);$BMERRCONT=~s/Error\:[An ]*ImageObject[^\n]+\n//sig;$BMERRCONT=~s/Error\: (Year|Month|Day) in OnlineDate \(\'[\s\S\t\n]*\'\) is not valid(Year|Month|Day)[^\n]+\n//sig;$BMERRCONT=~s/Error: Year in OnlineDate(.*?)Column \d+\)//is;$BMERRCONT=~s/Error: Month in OnlineDate(.*?)Column \d+\)//is;$BMERRCONT=~s/Error: Day in OnlineDate(.*?)Column \d+\)//is;if($BMERRCONT=~m/Error\:/si){$DELREPOR.="\n$BKIDNUM\_BookBackmatter.xml contains xml validation error\n";}}if($JSCONT=~/MediaType\=\"MyCopy\"/s){if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/MyCopy/$BKIDNUM\_FM1\_MyCopy.pdf")){$DELREPOR.="MyCopy FM PDF missing or check the file name in Content/PDF/Mycopy folder\n" if($CRCFLAG ne "YES");}if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PAGN/TOC/Mycopy\_Spine.txt")){$DELREPOR.="T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PAGN/TOC/Mycopy\_Spine.txt missing or chekc file name\n";}$mycopysignal1=0 if(!(-e "$uploadpath/$BKIDNUM\_Cover/$BKIDNUM\_Mycopy.pdf"));$mycopysignal2=0 if(!(-e "$uploadpath/$BKIDNUM\_Cover/$McopyISBN\_Cover\_PrintPDF.pdf"));if(($mycopysignal1 eq "0") && ($mycopysignal2 eq "0")){$DELREPOR.="MyCopy Cover PDF Missing in upload\n"; } }if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PAGN/TOC/Print\_Spine.txt")){$DELREPOR.="T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PAGN/TOC/Print\_Spine.txt missing or check file name\n";}if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PAGN/$BKIDNUM\_BookFrontmatter/FM\_page\_label.txt")){$DELREPOR.="T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PAGN/$BKIDNUM\_BookFrontmatter/FM\_page\_label.txt missing\n" if($CRCFLAG ne "YES");}$Printsignal1=0 if(!(-e "$uploadpath/$BKIDNUM\_Cover/$BKIDNUM\_Print.pdf"));$Printsignal2=0 if(!(-e "$uploadpath/$BKIDNUM\_Cover/$BOOKPRITISBN\_Cover\_PrintPDF.pdf"));if(($Printsignal1 eq "0") && ($Printsignal2 eq "0")){$DELREPOR.="Print Cover PDF Missing in upload\n"; } if(!(-e "$uploadpath/$BKIDNUM\_Cover/$BOOKEISBN\_CoverFigure.jpg")){$DELREPOR.="CoverFigure missing in upload\n"; } while($PUBCHECK=~/<DiscreteBookObjectInfo ID=\"Chapter\_\d+\">(.*?)<\/ChapterInfo>/s){$Chapterinfo=$1;$Chapterinfo=~/<ChapterID>(\d+)<\/ChapterID>/s;$CHID=$1;if ($Chapterinfo=~/<PartID>(\d+)<\/PartID>/s){$PARTSEQ=$1;}if($PARTSEQ!=""){if(!(-e "$uploadpath/$BKIDNUM\_$PARTSEQ\_Part/$BKIDNUM\_$CHID\_Chapter/$BKIDNUM\_$CHID\_Chapter\_OnlinePDF.pdf")) {$DELREPOR.="$uploadpath/$BKIDNUM\_$PARTSEQ\_Part/$BKIDNUM\_$CHID\_Chapter/$BKIDNUM\_$CHID\_Chapter\_OnlinePDF.pdf Missing\n";}  }else{if(!(-e "$uploadpath/$BKIDNUM\_$CHID\_Chapter/$BKIDNUM\_$CHID\_Chapter\_OnlinePDF.pdf")) {$DELREPOR.="$uploadpath/$BKIDNUM\_$CHID\_Chapter/$BKIDNUM\_$CHID\_Chapter\_OnlinePDF.pdf missing\n";}  }if($PARTSEQ!=""){if(!(-e "$uploadpath/$BKIDNUM\_$PARTSEQ\_Part/$BKIDNUM\_$CHID\_Chapter/$BKIDNUM\_$CHID\_PitStopReport\_Chapter\_OnlinePDF.pdf")) {$DELREPOR.="$uploadpath/$BKIDNUM\_$PARTSEQ\_Part/$BKIDNUM\_$CHID\_Chapter/$BKIDNUM\_$CHID\_PitStopReport\_Chapter\_OnlinePDF.pdf Missing\n";}  }else{if(!(-e "$uploadpath/$BKIDNUM\_$CHID\_Chapter/$BKIDNUM\_$CHID\_PitStopReport\_Chapter\_OnlinePDF.pdf")) {$DELREPOR.="$uploadpath/$BKIDNUM\_$CHID\_Chapter/$BKIDNUM\_$CHID\_PitStopReport\_Chapter\_OnlinePDF.pdf missing\n";}  } $PUBCHECK=~s/<DiscreteBookObjectInfo ID=\"Chapter\_\d+\">(.*?)<\/ChapterInfo>//s;} ####Figurecheck###@HTMLfiles = File::Find::Rule->file()->name('*HTML*')->in($uploadpath);foreach $ITFIG(@HTMLfiles){if($ITFIG=~/$BKIDNUM\_\d+\_Chapter\/$BKIDNUM\_(\d+)\_/){$FIGSEQ=$1; copy($ITFIG,"D:/$BKIDNUM\_HTML/$FIGSEQ");}if($ITFIG=~/$BKIDNUM\_BookFrontmatter/){copy($ITFIG,"D:/$BKIDNUM\_HTML/FM");}if($ITFIG=~/$BKIDNUM\_FM1/){copy($ITFIG,"D:/$BKIDNUM\_HTML/FM");}if($ITFIG=~/$BKIDNUM\_BookBackmatter/){copy($ITFIG,"D:/$BKIDNUM\_HTML/BM");}if($ITFIG=~/$BKIDNUM\_BM2/){copy($ITFIG,"D:/$BKIDNUM\_HTML/BM");}}@ESMfiles = File::Find::Rule->file()->name('*ESM*')->in($uploadpath);foreach $ITESM(@ESMfiles){if($ITESM=~/$BKIDNUM\_\d+\_Chapter\/$BKIDNUM\_(\d+)\_/){$ITESMFIGSEQ=$1; copy($ITESM,"D:/$BKIDNUM\_HTML/$ITESMFIGSEQ");}if($ITESM=~/$BKIDNUM\_BookFrontmatter/){copy($ITESM,"D:/$BKIDNUM\_HTML/FM");}if($ITESM=~/$BKIDNUM\_FM1/){copy($ITESM,"D:/$BKIDNUM\_HTML/FM");}if($ITESM=~/$BKIDNUM\_BookBackmatter/){copy($ITESM,"D:/$BKIDNUM\_HTML/BM");}if($ITESM=~/$BKIDNUM\_BM2/){copy($ITESM,"D:/$BKIDNUM\_HTML/BM");}}@MEDHTMLfiles = File::Find::Rule->file()->name('*HTML*')->in($PAGPATH);foreach $PAGITFIG(@MEDHTMLfiles){if($PAGITFIG=~/XML\/MediaObjects\/$BKIDNUM\_(\d+)\_/){$MEDFIGSEQ=$1; copy($PAGITFIG,"D:/$BKIDNUM\_HTML/$MEDFIGSEQ");}if($PAGITFIG=~/BookBackmatter\/XML\/MediaObjects\/$BKIDNUM\_BookBackmatter\_/){copy($PAGITFIG,"D:/$BKIDNUM\_HTML/BM");}}@TOTALHTMLfiles = File::Find::Rule->file()->name('*HTML*')->in("D:/$BKIDNUM\_HTML");foreach $TTFIGCOUNT(@TOTALHTMLfiles){$correctfilename=basename($TTFIGCOUNT);$correctfilename=~s/.gif|.jpg//; if($TTFIGCOUNT=~/$BKIDNUM\_(\d+)/){$FCHID=$1;open NEWFD,"<","D:/$BKIDNUM\_HTML/$FCHID/$BKIDNUM\_$FCHID\_Chapter.xml";$CHECFIGxml=do{local $/; <NEWFD>};close(NEWFD);if($CHECFIGxml!~/$correctfilename/s){$DELREPOR.="$correctfilename->> figurelink missing in chapter $FCHID xml\n"; }}if($TTFIGCOUNT=~/$BKIDNUM\_BookBackmatter|$BKIDNUM\_BM2/){open BACNEWFD,"<","D:/$BKIDNUM\_HTML/BM/$BKIDNUM\_BookBackmatter.xml";$BACKCHECFIGxml=do{local $/; <BACNEWFD>};close(BACNEWFD);$NewBBCcorrectfilename=$correctfilename;$NewBBCcorrectfilename=~s/BookBackmatter/BM2/;$NewBMCcorrectfilename=$correctfilename;$NewBMCcorrectfilename=~s/BM2/BookBackmatter/;if($BACKCHECFIGxml!~/$correctfilename/s && $BACKCHECFIGxml!~/$NewBBCcorrectfilename/s && $BACKCHECFIGxml!~/$NewBMCcorrectfilename/s){$DELREPOR.="$correctfilename->> figurelink missing in chapter BM xml\n"; }}if($TTFIGCOUNT=~/$BKIDNUM\_BookFrontmatter|$BKIDNUM\_FM1/){open FMNEWFD,"<","D:/$BKIDNUM\_HTML/FM/$BKIDNUM\_BookFrontmatter.xml";$FMCHECFIGxml=do{local $/; <FMNEWFD>};close(FMNEWFD);$NewBFCcorrectfilename=$correctfilename;$NewBFCcorrectfilename=~s/BookFrontmatter/FM1/;$NewFMCcorrectfilename=$correctfilename;$NewFMCcorrectfilename=~s/FM1/BookFrontmatter/;if($FMCHECFIGxml!~/$correctfilename/s && $FMCHECFIGxml!~/$NewBFCcorrectfilename/s && $FMCHECFIGxml!~/$NewFMCcorrectfilename/s){$DELREPOR.="$correctfilename->> figurelink missing in chapter FM xml\n"; }}}@XMLHTMLLINKS = File::Find::Rule->file()->name('*xml*')->in("D:/$BKIDNUM\_HTML");foreach $IEVLINK(@XMLHTMLLINKS){open FNEWFD,"<","$IEVLINK";$DXMLFC=do{local $/; <FNEWFD>};close(FNEWFD);#while($DXMLFC=~/FileRef=\"(.*?)\".*?Rendition=\"HTML\"/s)while($DXMLFC=~/FileRef=\"(.*?)\"/){$TEMCON=$1;if($TEMCON!~/MediaObjects/){if($TEMCON!~/OnlinePDF/i){  push(@XMLFIGCOUNTS,$TEMCON);}}$DXMLFC=~s/FileRef=\"(.*?)\"//s;}}foreach $xmlfiglinks(@XMLFIGCOUNTS){if($xmlfiglinks=~/$BKIDNUM\_(\d+)\_/s){$XMLFIGCHIDN=$1;if(!(-e "D:/$BKIDNUM\_HTML/$1/$xmlfiglinks" )){$JPGLINKRES=$xmlfiglinks;$JPGLINKRES=~s/\.gif/.jpg/;if(!(-e "D:/$BKIDNUM\_HTML/$XMLFIGCHIDN/$JPGLINKRES")){$JPGLINKRES=~s/.gif|.jpg//; $DELREPOR.="$JPGLINKRES->> missing in Upload OR PAGN/MediaObjects\n";}}}if($xmlfiglinks=~/BookFrontmatter|FM1/){if(!(-e "D:/$BKIDNUM\_HTML/FM/$xmlfiglinks")){$JPGLINKRESFM=$xmlfiglinks;$JPGLINKRESFM=~s/\.gif/.jpg/;if(!(-e "D:/$BKIDNUM\_HTML/FM/$JPGLINKRESFM")){$JPGLINKRESFM=~s/.gif|.jpg//;  $JPGLINKRESFMTOBK=$JPGLINKRESFM;$JPGLINKRESFMTOBK=~s/FM1/BookFrontmatter/i;$JPGLINKRESBKTOFM=$JPGLINKRESFM;$JPGLINKRESBKTOFM=~s/BookFrontmatter/FM1/i;if((!(-e "D:/$BKIDNUM\_HTML/FM/$JPGLINKRESFMTOBK.gif")) && (!(-e "D:/$BKIDNUM\_HTML/FM/$JPGLINKRESFMTOBK.jpg")) && (!(-e "D:/$BKIDNUM\_HTML/FM/$JPGLINKRESBKTOFM.gif")) && (!(-e "D:/$BKIDNUM\_HTML/FM/$JPGLINKRESBKTOFM.jpg"))){$DELREPOR.="$JPGLINKRESFM->> missing in Upload OR PAGN/MediaObjects\n";}}}}if($xmlfiglinks=~/BookBackmatter|BM2/){if(!(-e "D:/$BKIDNUM\_HTML/BM/$xmlfiglinks")){$JPGLINKRESBM=$xmlfiglinks;$JPGLINKRESBM=~s/\.gif/.jpg/; if(!(-e "D:/$BKIDNUM\_HTML/BM/$JPGLINKRESBM")){$JPGLINKRESBM=~s/.gif|.jpg//;$JPGLINKRESBMTOBB=$JPGLINKRESBM;$JPGLINKRESBMTOBB=~s/BM2/BookBackmatter/i;$JPGLINKRESBBTOBM=$JPGLINKRESBM;$JPGLINKRESBBTOBM=~s/BookBackmatter/BM2/i;if((!(-e "D:/$BKIDNUM\_HTML/BM/$JPGLINKRESBMTOBB.gif")) && (!(-e "D:/$BKIDNUM\_HTML/BM/$JPGLINKRESBMTOBB.jpg")) && (!(-e "D:/$BKIDNUM\_HTML/BM/$JPGLINKRESBBTOBM.gif")) && (!(-e "D:/$BKIDNUM\_HTML/BM/$JPGLINKRESBBTOBM.jpg"))){$DELREPOR.="$JPGLINKRESBM->> missing in Upload OR PAGN/MediaObjects\n";}}} }}###END FIG CHECK######PDFCMYKCHECK####if($JSTOPDF=~/<ColorImagesInPrint>/s){$colorimagesinprint=1; }# open FTRPDF,"<","$uploadpath/$BOOKPRITISBN\_Book\_PrintPDF.pdf";# $PDFCON=do {local $/; <FTRPDF>};# close(FTRPDF);# if($PDFCON=~/DeviceCMYK \/Type/s)# {# $PDFCOLORFIG=1; # }$PDFCOLORFIG=1 if(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/ColorPage\_Info/printcolortag.txt"); $DELREPOR.="<Colorimagesinprint> tag missing in JS (or) color figures missing in print pdf but js contain <colorimagesinprint> tag\n" if(($colorimagesinprint ne $PDFCOLORFIG) && ($CRCFLAG ne "YES"));if($JSTOPDF=~/ChapterXMLWithBody=\"No\"/){$JSBODY=0;} else{$JSBODY=1;}foreach $BXMLNAME(@CORXML){open BOXML,"<","T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BKIDNUM\_$BXMLNAME\_Chapter.xml";$BOXMLC=do {local $/; <BOXML>};close($BOXMLC);if($BOXMLC=~/<Body>/s){$CHBODY=1;}$DELREPOR.="ChapterXMLWithBody=\"No\" But chapter xml contain <Body> element in chapter $BXMLNAME\n" if($CHBODY != $JSBODY);}##UP/PUB VS CONTENT PDF TIME CHECK###$UPONLINEISS="$uploadpath";@LISTOFPDF = File::Find::Rule->file->name("*_OnlinePDF.pdf*")->in($UPONLINEISS);foreach $PDFINPUB(@LISTOFPDF){if($PDFINPUB!~/PitStopReport|\_Book\_/){ $BASEPDFINPUB= basename($PDFINPUB); $BASEXMLINPUB=$BASEPDFINPUB; $PDFINCON="T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Online/$BASEPDFINPUB";  $TIMEPDFINPUB = -M $PDFINPUB; $TIMEPDFINCON = -M $PDFINCON; $DELREPOR.="\n PDF TIME DIFFERS FOR PDF $BASEPDFINPUB BETWEEN UPLOAD AND CONTENT\n" if(($TIMEPDFINCON ne $TIMEPDFINPUB) && ($CRCFLAG ne "YES"));  if($BASEPDFINPUB=~/Chapter/) { $BASEXMLINPUB=~s/Chapter_OnlinePDF.pdf/Chapter.xml/igs; }  elsif($BASEPDFINPUB=~/PartFrontmatter/) { $BASEXMLINPUB=~s/PartFrontmatter_OnlinePDF.pdf/PartFrontmatter.xml/igs; }  elsif($BASEPDFINPUB=~/BookFrontmatter/) { $BASEXMLINPUB=~s/BookFrontmatter_OnlinePDF.pdf/BookFrontmatter.xml/igs; } elsif($BASEPDFINPUB=~/BookBackmatter/) { $BASEXMLINPUB=~s/BookBackmatter_OnlinePDF.pdf/BookBackmatter.xml/igs; }  $TIMEBASEXML="T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/$BASEXMLINPUB"; $SHOWTIMEBASEXML = -M $TIMEBASEXML; $DELREPOR.="\n CONTENT/ONLINE PDF TIME IS LESS THAN ITS XML IN CORR FOLDER $BASEPDFINPUB\n" if(($TIMEPDFINCON > $SHOWTIMEBASEXML) && ($CRCFLAG ne "YES") && ($BASEPDFINPUB!~/TOC/));}}##END UP/PUB VS CONTENT PDF TIME CHECK######PROOFFEEDBACK CHECK####if($PROOREQ=~/BookProofFeedbackPDF\=\"(.*?)\"/s){$PROFFSTATUS=$1;} #print "PROOFST=$PROFFSTATUS\n";if($PROFFSTATUS eq "Yes"){if(!(-e "T:/Books/BWF/$BKIDNUM/Stage$stage/Upload/Publisher/$BKIDNUM\_ProofFeedback.pdf")){$DELREPOR.="\nPROOFFEEDBACK MISSING IN UPLOAD FOLDER" if($stage=~/650/); }  }chdir("$uploadpath");system ("K:/sps-soft/BWF/IssuePDFValidation.exe $uploadpath/$BKIDNUM\_JobSheet\_$stage.xml");open FPDFEROR,"<","$uploadpath/pdferror.log";$PDFERRCON=do {local $/; <FPDFEROR>};close(FPDFEROR);$DELREPOR.="\nPDF PROPERTIES ERROR: PLS CHECK THE PDFERRORLOG IN UPLOAD" if($PDFERRCON=~/Fast Web View|Lang|PDF Version is Wrong/s); unlink("$uploadpath/pdferror.log") if($PDFERRCON!~/Fast Web View|Lang|PDF Version is Wrong/s);###StratTrimSizeCheck#### $BKPRINTPDFPATH="T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Print/$BKIDNUM\_BookFrontmatter\_PrintPDF.pdf";  if(-e $BKPRINTPDFPATH) { $BKPRINTPDF = PDF::API2->open("$BKPRINTPDFPATH"); $page = $BKPRINTPDF->openpage(1);   ($llx, $lly, $TrimHeight, $TrimWidth) = $page->get_trimbox; }# # # # $BKCHPRINTPDFPATH="T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/Print";# # @PRINTGROUP=<$BKCHPRINTPDFPATH/*PrintPDF.pdf>;# # foreach $PRPDFPROC(@PRINTGROUP)# {# # if(-e $PRPDFPROC)# {# $CHPRINTPDF = PDF::API2->open("$PRPDFPROC");# $page1 = $CHPRINTPDF->openpage(1);  # ($llxx, $llyy, $CHTrimHeight, $CHTrimWidth) = $page1->get_trimbox;# # if(($TrimHeight!=$CHTrimHeight) && ($TrimWidth!=$CHTrimWidth))# {# $DELREPOR.="\n Wrong Trim size found in $PRPDFPROC,Please check.\n";# }# } # } # #  $BKMycopyPDFPATH="T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/PDF/MyCopy/$BKIDNUM\_FM1\_MyCopy.pdf";  if(-e $BKMycopyPDFPATH) { $BKMyCopyPDF = PDF::API2->open("$BKMycopyPDFPATH"); $page2 = $BKMyCopyPDF->openpage(1);   ($llxxx, $llyyyy, $MyCopyTrimHeight, $MyCopyTrimWidth) = $page2->get_trimbox;  if(($TrimHeight!=$MyCopyTrimHeight) && ($TrimWidth!=$MyCopyTrimWidth)) {  $DELREPOR.="\nWrong Trim size found in MyCopyPDF,Please check.\n"; } $MYCOPYdoc = CAM::PDF->new("$BKMycopyPDFPATH");$Mycopycount = $MYCOPYdoc ->numPages();$DELREPOR.="\n MyCopy PDF contains more than 4 page,Please check\n" if($Mycopycount > 4);  } ###EndTrimSizeCheck#### ####CORR XML VS PAGN XML CHECK###$issuepagnpath="T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PAGN";$issuecorrpath="T:/Books/BWF/$BookCode/Stage$inputStage/Contents/CORR";@Pagxml = File::Find::Rule->file()->name('*_XML.xml*')->in($issuepagnpath);foreach $pagnxmlfile (@Pagxml){if($pagnxmlfile=~/XML/){$PAGXMLTIME = -M $pagnxmlfile;$PAGXMLFNAME = basename($pagnxmlfile);$PAGXMLFNAME=~s/\_XML\.xml/.xml/;$CORRXMLTIME = -M ("$issuecorrpath/$PAGXMLFNAME");if($PAGXMLTIME < $CORRXMLTIME){$DELREPOR.="\nCORR folder XML file time is less than pagination folder XML file,Please check file $PAGXMLFNAME\n";}} } if($DELREPOR eq ""){open REPFD,">","$uploadpath/EditorValidationReport.txt";print REPFD"No Error Detected";}else{open FREPFD,">>","$uploadpath/EditorValidationReport.txt";print FREPFD"$DELREPOR";  }rmtree("D:/$BKIDNUM\_HTML");unlink("T:/Books/BWF/$BKIDNUM/Stage$stage/Contents/CORR/Error.log");}}sub Foliocheck{print "\nEnter BookID \t\t:\t";$BookCode = <STDIN>;chomp($BookCode);print "\nEnter Stage \t\t:\t";$inputStage = <STDIN>;chomp($inputStage);$issueuploadpath="T:/Books/BWF/$BookCode/Stage$inputStage/Upload" if($inputStage=~/600/);$issueuploadpath="T:/Books/BWF/$BookCode/Stage$inputStage/Upload/Publisher" if($inputStage=~/650/);unlink("$issueuploadpath/TotalPagesReport.txt"); open FTREAD,"<","T:/Books/BWF/$BookCode/Stage$inputStage/Notification/$BookCode\_JobSheet\_$inputStage.xml";$JCONTTPRCO=do {local $/; <FTREAD>};close(FTREAD);if($JCONTTPRCO=~/<BookChapterCount>(.*?)<\/BookChapterCount>/s){$BookCHC=$1;}if($JCONTTPRCO=~/BookBackmatter|Apage\_BM2/s){$BackmatterFlag="yes";} while($JCONTTPRCO=~/<PartInfoGroup>/s){push(@PARTGROP,$&);$JCONTTPRCO=~s/<PartInfoGroup>/<PartInfoGroup/s;}$PARNUMBCOUNT=scalar @PARTGROP;copy("T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/$BookCode\_BookFrontmatter\_PrintPDF.pdf", "T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/FM.pdf");for($itemiter=1; $itemiter<=$BookCHC; $itemiter++){print "\nChecking $BookCode\_$itemiter\_Chapter\_PrintPDF.pdf\n"; `K:\\sps-soft\\PDF_utils\\pdftk_updated\\pdftk.exe \"T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/FM.pdf\" \"T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/$BookCode\_$itemiter\_Chapter\_PrintPDF.pdf\" cat output \"T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/FM1.pdf\"`;rename("T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/FM1.pdf", "T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/FM.pdf");}for($PARTITERE=1; $PARTITERE<=$PARNUMBCOUNT; $PARTITERE++){print "\nChecking $BookCode\_$PARTITERE\_PartFrontmatter\_PrintPDF.pdf\n";  `K:\\sps-soft\\PDF_utils\\pdftk_updated\\pdftk.exe \"T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/FM.pdf\" \"T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/$BookCode\_$PARTITERE\_PartFrontmatter\_PrintPDF.pdf\" cat output \"T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/FM1.pdf\"`;rename("T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/FM1.pdf", "T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/FM.pdf");}if($BackmatterFlag eq "yes"){print "\nChecking $BookCode\_BookBackmatter\_PrintPDF.pdf\n"; `K:\\sps-soft\\PDF_utils\\pdftk_updated\\pdftk.exe \"T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/FM.pdf\" \"T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/$BookCode\_BookBackmatter\_PrintPDF.pdf\" cat output \"T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/Final.pdf\"`;unlink("T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/FM.pdf");}else{rename("T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/FM.pdf", "T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/Final.pdf");}$totpag_printPDF = GetPDFPgs("T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/Final.pdf");$FM_printPDF = GetPDFPgs("T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/$BookCode\_BookFrontmatter\_PrintPDF.pdf");sub GetPDFPgs { my( $PFile ) = @_; my $doc = CAM::PDF->new($PFile) || die "$CAM::PDF::errstr\n"; my $pages = $doc->numPages(); return $pages;}$JSPPAGECOUNTS=$JCONTTPRCO;while($JSPPAGECOUNTS=~/<ChapterLastPage>(\d+)<\/ChapterLastPage>/g){push(@CHLASTPAGE,$1); } $CHAPLASPAGE=@CHLASTPAGE[$#CHLASTPAGE];if($JSPPAGECOUNTS=~/<BookBackmatterLastPage>(\d+)<\/BookBackmatterLastPage>/){$BMCHAPLASPAGE=$1;if($BMCHAPLASPAGE ne ""){$CHAPLASPAGE=$BMCHAPLASPAGE;}} if($CHAPLASPAGE % 2){$CHAPLASPAGE=$CHAPLASPAGE+1;} $TOTLPAGCOUNT=$FM_printPDF+$CHAPLASPAGE;if($totpag_printPDF ==$TOTLPAGCOUNT){open FAPRES,">>","$issueuploadpath/TotalPagesReport.txt";print FAPRES"\nTotal number of pages is matched correctly\n";print FAPRES"Total PDF Count ==$totpag_printPDF\n";print FAPRES"FM Page count==$FM_printPDF\n";print FAPRES"Book lastpage in JS==$CHAPLASPAGE\n";print FAPRES"FM+Chap+BM pagecount==$TOTLPAGCOUNT\n";}else{open FAPRES,">>","$issueuploadpath/TotalPagesReport.txt"; print FAPRES"\nTotal number of pages is not matched, inconsistency found in folio number please check\n";print FAPRES"Total PDF Count ==$totpag_printPDF\n";print FAPRES"FM Page count==$FM_printPDF\n";print FAPRES"Book lastpage==$CHAPLASPAGE\n";print FAPRES"FM+Chap+BM pagecount==$TOTLPAGCOUNT\n";}unlink("T:/Books/BWF/$BookCode/Stage$inputStage/Contents/PDF/Print/Final.pdf");}sub UploadPackagelogcreation {   print "\n\n\t\t*************************************\n";  print "\t\t*************************************\n\n";    START:  print "\nEnter Book ID\t:\t";  $bookid=<STDIN>;  chomp($bookid);      $serverpath="T:\\Books\\BWF\\$bookid";          if (!(-e $serverpath)) {   print "\nBook ID not found in Server. Please recheck the Number.\n";   goto START;  }     STAGE:  print "\nEnter Stage\t:\t";  $stage=<STDIN>;  chomp($stage);    if ($stage!~/^(600|650)$/) {   print "\nInvalid Stage entered. Please enter 600 or 650.\n";   goto STAGE;  }  $userLogin = getlogin();  my $socket = IO::Socket::INET->new(        Proto       => 'udp',        PeerAddr    => '198.41.0.4', # a.root-servers.net        PeerPort    => '53', # DNS    );    my $local_ip_address = $socket->sockhost;   ### create log  open(LOG,">T:/Books/BWF/SW_Logs/BOOK_Combine/S600/$userLogin\_$local_ip_address\_$bookid\_S$stage\_Book\_Completed.log") if($stage=~/600/); open(LOG,">T:/Books/BWF/SW_Logs/BOOK_Combine/S650/$userLogin\_$local_ip_address\_$bookid\_S$stage\_Book\_Completed.log") if($stage=~/650/); close(LOG);  print "\nLog created for Book $bookid Stage $stage\n"; }sub CRYREJECT{getUserInput();############################# Start: get Input #############################sub getUserInput {  print "\n\n\t\t\t*************************\n"; print "\t\t\t**** CRY Auto Update ****\n"; print "\t\t\t*************************\n\n";  print "Enter Book ID\t:\t"; $bookID=<STDIN>; chomp($bookID);  $jobsheet="T:\\Books\\BWF\\$bookID\\Stage650\\Author\\$bookID\_JobSheet\_650.xml"; UpdateXML(); }############################# End: get Input ########################################################## Start: Updated XML #############################sub UpdateXML {   open(JS, "$jobsheet") || die("file $jobsheet cannot be opened"); $jsContent = do { local $/; <JS> }; close(JS);   $jsContent=~s/\n\s+/\n/sg;    if ($jsContent=~/<BookCopyright>\n<CopyrightHolderName>(.*?)<\/CopyrightHolderName>\n<CopyrightYear>(\d+)<\/CopyrightYear>/)  {   $CRH=$1;   $CRY=$2;  }    if ($jsContent=~/<BookEdition>(.*?)<\/BookEdition>/) {  $Edtn=$1;  }   @allXML=();    chdir("T:\\Books\\BWF\\$bookID\\Stage650\\Contents\\CORR");  @allXML=<*.xml>;      foreach $allXML (@allXML) {      open(XML, "$allXML") || die("file $allXML cannot be opened");   $allXML_Content = do { local $/; <XML> };   close(XML);      print "Updating the CRY for $allXML...\n";   $allXML_Content=~s/<BookEdition>(.*?)<\/BookEdition>/<BookEdition>$Edtn<\/BookEdition>/sg;    $allXML_Content=~s/<CopyrightYear>(.*?)<\/CopyrightYear>/<CopyrightYear>$CRY<\/CopyrightYear>/sg;        open(XML, ">$allXML") || die("file $allXML cannot be opened");   print XML "$allXML_Content";   close(XML);      system("K:/sps-soft/SpACE/CheckTeX/CheckTeX.exe $allXML");      if($allXML=~/Chapter/igs)   {   system("K:/sps-soft/BWF/MetaDataPDF/createMetaDataPdf.exe $allXML 300");   }  }     UpdateCopy_info ();  } ############################# End: Updated XML ########################################################## Start: Updated ini #############################   sub UpdateCopy_info {    $CPY_Flag=0;  $CPY_info="H:\\Books\\BWF\\copy_info.ini";  #$CPY_info="H:\\Books\\BWF\\test.ini";      open(CPY, "$CPY_info") || die("file $CPY_info cannot be opened");  $CPY_info_content = do { local $/; <CPY> };  close(CPY);    if ($CPY_info_content=~/$bookID/) {   $CPY_Flag=1;   $CPY_info_content=~s/\\sprbookcopyinfo\{$bookID\}\{\\copyright\\(.*?) (\d+)\\\\/\\sprbookcopyinfo\{$bookID\}\{\\copyright\\$1 $CRY\\\\/;   }    if ($CPY_Flag==1) {  open(CPY, ">$CPY_info") || die("file $CPY_info cannot be opened");  print CPY "$CPY_info_content";  close(CPY);  }    TrigerPS(); }############################# End: Updated ini #############################   ############################# Start: Initiate Auto PS #############################   sub TrigerPS {   $Stagepath="T:\\Books\\BWF\\$bookID\\Stage650\\Contents\\PAGN\\"; $Notificationpath="T:\\Books\\BWF\\$bookID\\Stage650\\Notification\\";  $PagnTypeFlag=0;     if (-d "$Stagepath\\$bookID\_1\_Part") {  $PagnPath="T:\\Books\\BWF\\$bookID\\Stage650\\Contents\\PAGN\\$bookID\_1\_Part\\"; } else  {  $PagnPath="T:\\Books\\BWF\\$bookID\\Stage650\\Contents\\PAGN\\$bookID\_1\_Chapter\\"; }   my @PagnFiles = File::Find::Rule->file()                             ->name("*.*")                             ->in($PagnPath);    foreach $PagnFiles (@PagnFiles) {  $PagnFiles=~s/\//\\/g;  $PagnType=basename($PagnFiles);  #print "\n$PagnType\n";    if ($PagnType=~/^$bookID\_(\d+)\_Chapter.indd$/)   {   $PagnTypeFlag=3;   print "\nPagination Platform ---  \"Indesign\"\n";   }  elsif ($PagnType=~/^$bookID\_(\d+)\_Chapter.tex$/)    {   $PagnTypeFlag=2;   print "\nPagination Platform ---  \"TeX\"\n";   }  elsif ($PagnType=~/^$bookID\_(\d+)\_Chapter.3d$/)    {   $PagnTypeFlag=1;   print "\nPagination Platform ---  \"3B2\"\n";   } }  if ($PagnTypeFlag==1) { print "\n\nAuto Pagination Started...\n\n"; system "K:\\sps-soft\\3B2\\BWF\\BWF_Auto-Issue.exe \"$jobsheet\""; } if ($PagnTypeFlag==2) { print "\n\nAuto Pagination Started...\n\n"; system "K:\\sps-soft\\Formats\\Applications\\sprbooks.bat \"$bookID\" 650 Springer"; } #if ($PagnTypeFlag==3) { #system "K:\\sps-soft\\Indesign\\SPS-ID\\Tools\\TOCGEN600\\TOCGEN600.bat \"$jobsheet\""; #}   } ############################# End: Initiate Auto PS #############################} sub Pagefolio(){print "\nEnter BookID \t\t:\t";$BKID=<STDIN>;chomp($BKID);print "\nEnter Stage \t\t:\t";$ST=<STDIN>;chomp($ST);print "\n\nSpringer Folio Number Check. (C) SPS Chennai, India 2016 Anuraj.\n";$REPORTPATH="T:/Books/BWF/$BKID/Stage$ST/Upload/FolioReport.txt" if($ST=~/600/);$REPORTPATH="T:/Books/BWF/$BKID/Stage$ST/Upload/Publisher/FolioReport.txt" if($ST=~/650/);unlink($REPORTPATH);$JS="T:/Books/BWF/$BKID/Stage$ST/Notification/$BKID\_JobSheet\_$ST\.xml"; open NJSCON,"<","$JS";$NFJS=do{local $/; <NJSCON> };close(NJSCON);$xmlContent=$NFJS;if ($xmlContent=~/<ChapterID>(\d+)<\/ChapterID>/is) { $firstChap = $1;}if ($xmlContent=~/<PartID>(\d+)<\/PartID>/is) { $firstPart = $1;}if (-e "T:\/Books\/BWF\/$BKID\/Stage$ST\/Contents\/PAGN\/$BKID\_$firstPart\_Part\/$BKID\_$firstChap\_Chapter\/$BKID\_$firstChap\_Chapter.indd") { $IndesginBook = "yes"; }elsif (-e "T:\/Books\/BWF\/$BKID\/Stage$ST\/Contents\/PAGN\/$BKID\_$firstChap\_Chapter\/$BKID\_$firstChap\_Chapter.indd") { $IndesginBook = "yes";}if($NFJS=~/<BookDOI>(.*?)<\/BookDOI>/i){$DOI=$1;} if (($NFJS=~/<DiscreteBookObjectInfo ID=\"Cover/) && ($ST=="600")) { $RepeatFlag = 1;}while($NFJS=~/<DiscreteBookObjectInfo ID=\"(.*?)\">/igs) {  $order=$1;     if ($order=~/^BookBackmatter$/)  {   $order=~s/BookBackmatter/$BKID\_BookBackmatter\_OnlinePDF.pdf/i;   $print_order=$order;   $print_order=~s/$BKID\_BookBackmatter\_OnlinePDF.pdf/$BKID\_BookBackmatter\_PrintPDF.pdf/i;  }  elsif ($order=~/Apage_BM2/)  {   $order=~s/Apage_BM2/$BKID\_BookBackmatter\_OnlinePDF.pdf/i;   $print_order=$order;   $print_order=~s/$BKID\_BookBackmatter\_OnlinePDF.pdf/$BKID\_BookBackmatter\_PrintPDF.pdf/i;  }  elsif ($order=~/Chapter/)  {   $order =~s/Chapter_(\d+)/$1/sg;    $order = $order - 1 if (($ST=="600") && ($RepeatFlag=="0"));    $order=~s/(\d+)/$BKID\_$1\_Chapter\_OnlinePDF.pdf/igs;   $print_order=$order;   $print_order=~s/$BKID\_(\d+)\_Chapter\_OnlinePDF.pdf/$BKID\_$1\_Chapter\_PrintPDF.pdf/igs;  }  elsif ($order=~/PartFrontmatter_(\d+)/)  {   $order=~s/PartFrontmatter_(\d+)/$BKID\_$1\_PartFrontmatter\_OnlinePDF.pdf/i;   $print_order=$order;   $print_order=~s/$BKID\_(\d+)\_PartFrontmatter\_OnlinePDF.pdf/$BKID\_$1\_PartFrontmatter\_PrintPDF.pdf/i;  }  elsif ($order=~/PartBackmatter_(\d+)/)  {   $order=~s/PartBackmatter_(\d+)/$BKID\_$1\_PartBackmatter\_OnlinePDF.pdf/i;   $print_order=$order;   $print_order=~s/$BKID\_(\d+)\_PartBackmatter\_OnlinePDF.pdf/$BKID\_$1\_PartBackmatter\_PrintPDF.pdf/i;  }    if($online_xmlContent=~/<(.*?)FirstPage>(\d+)<\/(.*?)FirstPage>\n<(.*?)LastPage>(\d+)<\/(.*?)LastPage>/g)  {   $first_pg="$2";   $lst_pg="$5";  }   $chap_order.="T:\\Books\\BWF\\$BKID\\$stage\\Contents\\PDF\\Online\\$order --- $first_pg-$lst_pg\n";  $print_order_label.="T:\\Books\\BWF\\$BKID\\$stage\\Contents\\PDF\\Print\\$print_order\n";    }chomp($print_order_label);$print_order_label=~s/T:\\Books\\BWF\\$BKID\\$stage\\Contents\\PDF\\Print\\//igs;$print_order_label=~s/\n//igs;$print_order_label=~s/\.pdf/.pdf\n/igs;@CHAPLIST=split("\n",$print_order_label);foreach $ITCHAPLIST(@CHAPLIST){$writpage=$ITCHAPLIST;$writpage=~s/\.pdf/.txt/i;$DIPLAY=$ITCHAPLIST;$DIPLAY=~s/_PrintPDF.pdf//i;print "\n\Processing $DIPLAY...\n";if($ITCHAPLIST=~/PartFrontmatter/i){$Partdoc = CAM::PDF->new("T:/Books/BWF/$BKID/Stage$ST/Contents/PDF/Print/$ITCHAPLIST");#$chappage = $Partdoc ->numPages(); open OPJSPAGE,"<","T:/Books/BWF/$BKID/Stage$ST/Notification/$BKID\_JobSheet\_$ST\.xml";$JSCONPART= do {local $/; <OPJSPAGE>};close(OPJSPAGE);if($ITCHAPLIST=~/$BKID\_(\d+)\_PartFrontmatter/i){$PARTID=$1;}if($JSCONPART=~/<DiscreteBookObjectInfo ID\=\"PartFrontmatter\_$PARTID\">(.*?)<\/BookFrontmatterInfo>/igs){$GETLASTPAGE=$1;if($GETLASTPAGE=~/<BookFrontmatterFirstPage>(\d+)<\/BookFrontmatterFirstPage>/igs){$Firstpage=$1; }if($GETLASTPAGE=~/<BookFrontmatterLastPage>(\d+)<\/BookFrontmatterLastPage>/igs){$chappage=$1; if($chappage % 2){$chappage=$chappage+1; } } } open FFDFD,">","D:/jesus/Trim/TXT/$writpage";print FFDFD"$chappage";}if($ITCHAPLIST=~/Chapter/i){$ONLINECHAPLIST=$ITCHAPLIST;$ONLINECHAPLIST=~s/Print/Online/i if($IndesginBook ne "yes");$pdf = CAM::PDF->new("T:/Books/BWF/$BKID/Stage$ST/Contents/PDF/Online/$ONLINECHAPLIST") if($IndesginBook ne "yes");$pdf = CAM::PDF->new("T:/Books/BWF/$BKID/Stage$ST/Contents/PDF/Print/$ONLINECHAPLIST")  if($IndesginBook eq "yes");$doc="";$doc = $doc.$pdf->getPageText(1);open FFDFDON,">","D:/jesus/Trim/DOC/$ONLINECHAPLIST.txt";print FFDFDON"$doc";if(($doc=~/DOI $DOI\_\d+\s(\d+)|DOI $DOI\_\d+\n(\d+)/si)||($doc=~/^(\d+)/)||($doc=~/\w\w Page\: \d+\/\d+ (\d+)/) || ($doc=~/Page\: \d+\/\d+\n(\d+)/) ){ $pages=$1;$Firstpage=$pages;$chapdoc = CAM::PDF->new("T:/Books/BWF/$BKID/Stage$ST/Contents/PDF/Print/$ITCHAPLIST");$count = $chapdoc ->numPages(); $chappage=($pages+$count)-1;open FFDFD,">","D:/jesus/Trim/TXT/$writpage";print FFDFD"$chappage";} }push(@PAGENUMBERS,"$chappage");push(@FIRSTPAGENUMBERS,"$Firstpage");}$LSVALUE=scalar @PAGENUMBERS;$FSVALUE=scalar @FIRSTPAGENUMBERS; for ($PVALUE=0; $PVALUE<$LSVALUE-1; $PVALUE++) {  $NEWPAGENUMBER=$PAGENUMBERS[$PVALUE]+1; if(($NEWPAGENUMBER != $FIRSTPAGENUMBERS[$PVALUE+1]) && ($CHAPLIST[$PVALUE+1]!~/BookBackmatter/)) {   $ERROR.="\n Wrong folio number found in chapter $CHAPLIST[$PVALUE+1] & OnlinePDF, Please check\n"; print"\n Wrong folio number found in chapter $CHAPLIST[$PVALUE+1] & OnlinePDF, Please check\n";   }       }if($ERROR!~/Wrong folio/){$ERROR="No Errors in folio numbers\n";}open ERRPE,">","$REPORTPATH";print ERRPE$ERROR; }
